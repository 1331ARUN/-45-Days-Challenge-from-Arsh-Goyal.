// class Solution {
//     public List<List<String>> groupAnagrams(String[] strs) {
//        HashMap<HashMap<Character,Integer>,ArrayList<String>>bmap=new HashMap<>();

//         for(String str:strs)
//         {
//             HashMap<Character,Integer>map=new HashMap<>();
//             for(int i=0;i<str.length();i++)
//             {
//             char ch=str.charAt(i);
//             map.put(ch,map.getOrDefault(ch,0)+1);

//         }

//         if(bmap.containsKey(map)==false)
//         {
//             ArrayList<String>ans=new ArrayList<>();
//             ans.add(str);
//             bmap.put(map,ans);

//         }
//         else{
//             ArrayList<String>ans=bmap.get(map);
//             ans.add(str);
//         }

//     }
//     List<List<String>>res=new ArrayList<>();
//     for(ArrayList<String>val:bmap.values())
//     {
//         res.add(val);
//     }
//     return res;
//     }
// }

class Solution 
{
    public List<List<String>> groupAnagrams(String[] strs)
    {
       Map<String,List<String>>map=new HashMap<>();

       for(String str:strs)
    {

char ch[]=str.toCharArray();
Arrays.sort(ch);
String key=String.valueOf(ch);
if(!map.containsKey(key))
{
    map.put(key,new ArrayList<>());

}
    map.get(key).add(str);
       }
        return new ArrayList<>(map.values());
    }
}
