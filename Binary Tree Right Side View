/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// class Solution {
//     public List<Integer> rightSideView(TreeNode root) 
//     {
        
//         List<Integer>ans=new ArrayList<>();
//         HashSet<Integer>hm=new HashSet<>();

//         helper(root,0,ans,hm);
//         return ans;
//     }

// void helper(TreeNode root,int level,List<Integer>ans,HashSet<Integer>hm)
// {

//     if(root==null)
//     {
//         return ;
//     }
//     if(hm.add(level))
//     {
//         ans.add(level,root.val);
//     }
//     helper(root.right,level+1,ans,hm);
//     helper(root.left,level+1,ans,hm);

// }
// }
public class Solution 
{
    public List<Integer> rightSideView(TreeNode root)
     {
        List<Integer> result = new ArrayList<Integer>();
        rightView(root, result, 0);
        return result;
    }
    
    public void rightView(TreeNode curr, List<Integer> result, int currDepth){
        if(curr == null)
        {
            return;
        }
        if(currDepth == result.size())
        {
            result.add(curr.val);
        }
        
        rightView(curr.right, result, currDepth + 1);
        rightView(curr.left, result, currDepth + 1);
        
    }
}
