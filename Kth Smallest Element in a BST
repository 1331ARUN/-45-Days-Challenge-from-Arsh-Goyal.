/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {


    int hike(TreeNode root,int []i,int k)
    {
        if(root==null)
        {
            return -1;
        }
        int left=hike(root.left,i,k);
        if(left!=-1)
        {
        return left;
        }
        i[0]++;
        if(i[0]==k)
        {
            return root.val;
        }

        int right=hike(root.right,i,k);

        if(right!=-1)
        {
            return right;
        }
        return -1;
    }
    public int kthSmallest(TreeNode root, int k) {
        
        int i[]={0};

        return hike(root,i,k);
        //return ans;
    }
}
