/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/
class Solution {
    public Node flatten(Node head) {
        Node curr=head;
        while(curr!=null)
        {
            if(curr.child != null)
            {
                Node tail = findTail(curr.child);
                if(curr.next != null)
                {
                    curr.next.prev=tail;
                }
                
                tail.next = curr.next;
                curr.next =curr.child;
                curr.child.prev = curr;
                curr.child =null;
            }
            curr = curr.next;
        }
        return head;
    }
    
    public Node findTail(Node child)
    {
        while(child.next != null)
        {
            child=child.next;
        }
        return child;
    }
}
























// class Solution {

//     public Node merge(Node a,Node b)
//     {
// if(a==null)
// return b;

// if(b==null)
// return a;
// Node result;
//         if(a.val<b.val)
//         {

// result=a;
// result.child=merge(a.child,b);

//         }
//         else
//         {

//             result=b;
//             result.child=merge(a,b.child);
//         }
//         result.next=null;
//         return result;
//     }
//     public Node flatten(Node head) {
//         if(head==null||head.next==null)
//         {
//             return head;
//         }
//         return merge(head,flatten(head.next));
//     }
// }
