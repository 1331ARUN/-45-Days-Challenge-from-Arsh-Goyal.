class Solution
{
    public String findOrder(String [] dict, int N, int K)
    {
        // Write your code here
        
        ArrayList<Integer>graph[]=new ArrayList[K];
        for(int i=0;i<K;i++)
        {
            graph[i]=new ArrayList<>();
        }
        
        for(int i=0;i<N-1;i++)
        {
            String s1=dict[i];
            String s2=dict[i+1];
            
            int n=Math.min(s1.length(),s2.length());
            
            for(int j=0;j<n;j++)
            {
                if(s1.charAt(j)!=s2.charAt(j))
                {
                    graph[s1.charAt(j)-'a'].add(s2.charAt(j)-'a');
                    break;
                }
            }
        }
        Stack<Integer>stack=new Stack<>();
        boolean vis[]=new boolean[K];
        
        for(int i=0;i<K;i++)
        {
            if(!vis[i])
            topSort(graph,i,vis,stack);
        }
        
        String ans="";
        while(!stack.isEmpty())
        {
            char c=(char)(stack.pop()+'a');
            ans+=c;
        }
        return ans;
    }
    public void topSort(ArrayList<Integer>graph[],int curr,boolean vis[],Stack<Integer>stack)
    {
        vis[curr]=true;
        for(int i=0;i<graph[curr].size();i++)
        {
            int next=graph[curr].get(i);
            if(!vis[next])
            {
                topSort(graph,next,vis,stack);
            }
        }
        stack.push(curr);
    }
}
