/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
       Queue<TreeNode>q=new LinkedList<>();
	    List<List<Integer>>res=new ArrayList<>();
	    
	    q.add(root);
	    
	    boolean flag=true;
	    
	    while(!q.isEmpty())
	    {
	        
	        int nodeCount=q.size();
	        
	        List<Integer>arr=new ArrayList<>();
	        
	        for(int i=0;i<nodeCount;i++)
	        {
	            
	            TreeNode temp=q.poll();
	            arr.add(temp.val);
	            
	            if(temp.left!=null)
	            {
	                q.add(temp.left);
	            }
	            if(temp.right!=null)
	            {
	                q.add(temp.right);
	            }
	            
	        }
	        if(flag)
	        {
	            res.addAll(arr);
	        }
	        else
	        {
	            Collections.reverse(arr);
	            
	            res.addAll(arr);
	        }
	        flag=!flag;
	    }
	    return res;   
    }
}
