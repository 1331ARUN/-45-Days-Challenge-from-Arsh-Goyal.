/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverse(ListNode head)
    {

        ListNode output=null;
        while(head!=null)
        {

            ListNode temp=head.next;
            head.next=output;
            output=head;
            head=temp;

     
        }
        return output;

    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2)
    {
        
        ListNode r1=reverse(l1);
        ListNode r2=reverse(l2);
        ListNode dummy=new ListNode();
        ListNode temp=dummy;
int carry=0;
        while(r1!=null||r2!=null ||carry==1)
        {

            int sum=0;
            if(r1!=null)
            {
                sum+=r1.val;
                r1=r1.next;
            }
            if(r2!=null)
            {
                sum+=r2.val;
                r2=r2.next;
            }
            sum+=carry;
            carry=sum/10;
            ListNode node =new ListNode(sum%10);
            temp.next=node;
            temp=temp.next;
        }
       return  reverse(dummy.next);
    }

}
