/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    private int camera=0;
     public int minCameraCover(TreeNode root) 
    {
        return minCameraCoverhelper(root)==-1?camera+1:camera;
    }
        public int minCameraCoverhelper(TreeNode root) 
        {
        if(root==null)
        {
            return 0;
        }
        int leftchild=minCameraCoverhelper(root.left);
        int rightchild=minCameraCoverhelper(root.right);

        if(leftchild==-1||rightchild==-1)
        {
            camera++;
            return 1;
        }
        if(leftchild==1||rightchild==1)
        
            return 0;
        
        return -1;
        
    }
}
